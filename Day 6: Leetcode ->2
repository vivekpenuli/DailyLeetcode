
Maximum Sum of Distinct Subarrays With Length K
class Solution {
    public long maximumSubarraySum(int[] nums, int k) {
       long newmax=0,sum=0;
       int i=0,j=0;
       Map<Integer,Integer>mp = new HashMap<>();
       while(j<nums.length)
       {
           sum=sum+nums[j];
           mp.put(nums[j],mp.getOrDefault(nums[j],0)+1);

           while(mp.get(nums[j])==2)
           {
             mp.put(nums[i],mp.get(nums[i])-1);
               sum=sum-nums[i];
               i++;
             
           }    
              if(j-i+1==k)
              {
                  newmax= Math.max(newmax,sum);
                mp.remove(nums[i]);
                  sum = sum-nums[i];
                  i++;
              }
    
       j++;
       }
      
       return newmax;
    }

}
