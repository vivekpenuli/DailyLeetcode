




875. Koko Eating Bananas

class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int low=1;
        int high=0;
        for(int i=0;i<piles.length;i++){
            high=Math.max(high,piles[i]);
        }
        while(low<=high){
            int mid=(low+high)/2;
            double hours= blackbox(mid,piles,h);
            if(hours<=h){
                high=mid-1;
            }
            else
                low=mid+1;
        }
        return low;
    }
    public double blackbox(int maxpiles,int[] piles,int h){
// if hours in double then we need to return the result in double that's' why

        double hours=0;
        for(int i=0;i<piles.length;i++){
            hours += piles[i]/maxpiles;
            if(piles[i]%maxpiles!=0) hours++;
        }
        return hours;
    }
}






